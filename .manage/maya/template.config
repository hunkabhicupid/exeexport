################# cpp files path/header files path/lib or exe name #################

#Target name and type
[target]

	#Name of target, without the extension
	var name = ""
	
	#Type of target (LIB or EXE)
	var type = ""
	
#cpp files to be processed
[include]
	#Add all cpp files that needs to be built. Each added file must be preceded with a '+' sign
	
	#Example: + src/*.cpp
	#		  + src/*/*.cpp  - This means recursively go through all folders in src and get all cpps
	
#Dependency headers path
[dep_includes]
	#Dependency components includes and self includes
	#Add dependency components header file paths. Refer the below example
	
	#Example:"+ src/
	#		  + ../src/ 
	#		  + ../../lib.twtest/src/
	#NOTE:PLEASE ADD the "/" at end of the path
	
	
################# Dependent libs #################	

#Dependency libs
[dep_libs]
	# + folder name of library, "/.", target name of the library
	#Example: lib.base/.base
	#Here lib.base is the name of the dependent lib. & base is the target name of the lib
	#Example2: lib.twtest/.tw
	#Here target will be tw.lib or tw.a
	
#List of obj files to be linked
[dep_objs]
	# + folder name of folder in which the obj is present, "/.", target name of the obj
	#Example: lib.base/.base
	#Here in lib.base's bin/win/debug base.obj exists
	
################# Path variables #################

#Target path variables.
#These are mostly fixed and should not be changed unless necessary.
[variables]
	#build paths for windows 
	var win_debug   	= "bin/win/debug"
	var win_debug64 	= "bin/win/debug64"
	var win_release 	= "bin/win/release"
	var win_release64 	= "bin/win/release64"
	#build paths for linux
	var lin_debug   	= "bin/linux/debug"
	var lin_debug64 	= "bin/linux/debug64"
	var lin_release 	= "bin/linux/release"
	var lin_release64 	= "bin/linux/release64"

################# path to code.TallyWorld folder #################
#Add the path to code.TallyWorld
[basefolder]
	var path = ""
	#Example: ../../
	#Means code.TallyWorld is two folders above current folder.
	#NOTE:PLEASE DONT FORGET TO ADD THE "/" AT END OF PATH

################# Block to specify post build commands #################
#Use $(out) variable to get the path of your build
#Ex: If you did "maya debug" in windows then "out" = "bin/win/debug"
# $(ext): Extension of the output (.lib/.exe/.dll)
#Windows post build block
[post_build_win]
	#Ex: exec cp $(out)/$(name)$(ext)../
	#Equivalent to cp bin/win/debug/base.lib  ../ 	(in windows)

#Linux post build block
[post_build_lin]
	#Ex: exec cp $(out)/$(name).a ../
	#Equivalent to cp bin/win/debug/base.a  ../ 	(in linux)
	
################# path to file present in .maya folder #################

#One needs to add the path of the maya.config file that exists in the .maya folder.
#.maya folder exists in code.TallyWorld.
#If this path is set wrongly, nothing will work.
include 

#Example include ../.maya/maya.config
#The above example assumes that the current maya config 
#file is on folder down the hierarchy as compared to .maya folder
