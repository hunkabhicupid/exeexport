// Sri Ganeshji : Sri Balaji : Sri Pitreshwarji : Sri Durgaji : Sri Venkateshwara
/**
 * @file class.h
 *
 * @brief This demonstrates exporting functions.
 */

#ifndef LIB1_CLASS_H
#define LIB1_CLASS_H

#include "library_export.h"
#include <stdint.h>

/** 
 * Specify LIB_EXPORT before the class name if the whole class
 * needs to be exported. Marking the class as exported specifier
 * tells the compiler to attempt to export everything that is
 * related to the class. It includes all class data members, all
 * class member functions (either explicitly declared, or
 * implicitly generated by the compiler), all base classes of
 * the class, and all their members.
 * 
 *  The compiler will warn you about the not exported base class
 *  and the not exported class of the data member. So, in order
 *  to export a C++ class successfully, a developer is required
 *  to export all the relevant base classes and all the classes
 *  that are used for the definition of the data members.
 * 
 * Or before the method declarations if only specific class
 * methods need to be exported.
 * 
 */
class LIB_EXPORT TString {
public:
    TString();
    ~TString();

    TW_FORCEINLINE bool InlineFuncTString   () {
        return true;
    }
    static const char**GetStaticTStringPointer ();
    static const char* GetStaticTString   ();
    static void SetStaticTString   (const char*);
    
    bool        FuncTString         ();
    bool        FuncNewTString      ();

private:
    char *          vStr;
    static const char*    vStaticStr;
};

#endif
